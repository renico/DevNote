{
  "blog" :{
    "posts" : {
      "-Kg582gl4ixTJpil2xhO" : {
        "authorName" : "Nicolas Renard",
        "authorPict" : "https://lh3.googleusercontent.com/-nBsbofbzuQY/AAAAAAAAAAI/AAAAAAAAAmc/xJn6Fm81x04/photo.jpg",
        "authorUID" : "y1HYlzXKTQgBH3V9P2n7bUPbywB3",
        "color" : "#555588",
        "cols" : "3",
        "content" : "le contenu de b a été modifié &|@\"\n<div>\npossible ou pas\n</div>",
        "maj" : 1490688384092,
        "rows" : "1",
        "title" : "Changement de titre pour le second post"
      },
      "-Kg5ENydo8mmRis6otJ0" : {
        "authorName" : "Nicolas Renard",
        "authorPict" : "https://lh3.googleusercontent.com/-nBsbofbzuQY/AAAAAAAAAAI/AAAAAAAAAmc/xJn6Fm81x04/photo.jpg",
        "authorUID" : "y1HYlzXKTQgBH3V9P2n7bUPbywB3",
        "color" : "#FFFF55",
        "cols" : "1",
        "content" : "<h2>Voici une liste d&#39;API pour Angular 2:</h2>\n\n<p><img alt=\"\" src=\"http://ngcli.github.io/img/logo.png\" /></p>\n\n<ul>\n\t<li><a href=\"http://ngcli.github.io/\">http://ngcli.github.io/</a></li>\n</ul>\n\n<p>&nbsp;</p>\n\n<p>&nbsp;</p>\n\n<p><img alt=\"\" src=\"https://static.continuation.io/images/webpack_logo.png\" style=\"height:200px; width:200px\" /></p>\n\n<ul>\n\t<li><a href=\"http://webpack.github.io/docs/\">http://webpack.github.io/docs/</a></li>\n</ul>\n\n<p>&nbsp;</p>\n\n<p><span class=\"marker\"><a href=\"https://angular.io/docs/ts/latest/guide/cheatsheet.html\">https://angular.io/docs/ts/latest/guide/cheatsheet.html</a></span></p>\n\n<p><ins>todo :&nbsp;</ins><a href=\"https://angular.io/docs/ts/latest/guide/security.html#!#xss\">https://angular.io/docs/ts/latest/guide/security.html#!#xss</a></p>\n\n<p><img alt=\"\" src=\"https://www.gstatic.com/mobilesdk/160503_mobilesdk/logo/2x/firebase_28dp.png\" style=\"float:left; height:40px; width:40px\" />AngularFire:</p>\n\n<ul>\n\t<li><a href=\"https://github.com/angular/angularfire2/blob/master/docs/api-reference.md\">https://github.com/angular/angularfire2/blob/master/docs/api-reference.md</a></li>\n</ul>\n\n<p>&nbsp;</p>\n\n<p><img alt=\"\" src=\"https://gae-angular-material-starter.appspot.com/p/modules/core/img/material-design-logo.png\" style=\"float:left; height:39px; width:40px\" />&nbsp;Material angular:</p>\n\n<ul>\n\t<li>\n\t<p><a href=\"https://material.angularjs.org/latest/api/directive/mdAutocomplete\">https://material.angularjs.org/latest/api/directive/mdAutocomplete</a></p>\n\t</li>\n\t<li>\n\t<p><a href=\"https://material.io/guidelines/style/icons.html#icons-system-icons\">https://material.io/guidelines/style/icons.html#icons-system-icons</a></p>\n\t</li>\n\t<li>\n\t<p><a href=\"https://github.com/chymz/ng2-ckeditor\">https://github.com/chymz/ng2-ckeditor</a></p>\n\t</li>\n\t<li>\n\t<p><a href=\"https://material.io/icons/\">https://material.io/icons/</a></p>\n\t</li>\n\t<li>\n\t<p><a href=\"https://github.com/material-components\">https://github.com/material-components</a></p>\n\t</li>\n\t<li>\n\t<p><a href=\"http://fezvrasta.github.io/bootstrap-material-design/#getting-started\">http://fezvrasta.github.io/bootstrap-material-design/#getting-started</a></p>\n\t</li>\n</ul>\n\n<p>&nbsp;</p>\n\n<h3><img alt=\"\" src=\"http://sdk.ckeditor.com/theme/img/logo.png\" style=\"height:60px; width:202px\" /><!--2--></h3>\n\n<ul>\n\t<li>\n\t<p><a href=\"http://sdk.ckeditor.com/samples/sourcearea.html\">http://sdk.ckeditor.com/samples/sourcearea.html</a></p>\n\t</li>\n</ul>\n",
        "maj" : 1490711949597,
        "rows" : "2",
        "title" : "API à retenir"
      },
      "-Kg5KPAy_5FfEb7Z3B2C" : {
        "authorName" : "Nicolas Renard",
        "authorPict" : "https://lh3.googleusercontent.com/-nBsbofbzuQY/AAAAAAAAAAI/AAAAAAAAAmc/xJn6Fm81x04/photo.jpg",
        "authorUID" : "y1HYlzXKTQgBH3V9P2n7bUPbywB3",
        "color" : "#996666",
        "cols" : "3",
        "content" : "<p><a href=\"https://github.com/kdenz\">@kdenz</a> <a href=\"https://github.com/doczoidberg\">@doczoidberg</a> AF2 is currently in Alpha, and those methods are already available! \uD83C\uDF89</p>\n\n<p>Here&#39;s an example!</p>\n\n<pre>\nclass MyComp {\n  questions: FirebaseListObservable&lt;any[]&gt;;\n  value: FirebaseObjectObservable&lt;any&gt;;\n  constructor(af: AngularFire) {\n    this.questions = af.database.list(&#39;/questions&#39;);\n    this.value = af.database.object(&#39;/value&#39;);\n  } \n  addToList(item: any) {\n    this.questions.push(item);\n  }\n  removeItemFromList(key: string) {\n    this.questions.remove(key).then(_ =&gt; console.log(&#39;item deleted!&#39;));\n  }\n  deleteEntireList() {\n    this.questions.remove().then(_ =&gt; console.log(&#39;deleted!&#39;));\n  }\n  setValue(data: any) {\n    this.value.set(data).then(_ =&gt; console.log(&#39;set!&#39;));\n  }\n  updateValue(data: any) {\n    this.value.update(data).then(_ =&gt; console.log(&#39;update!&#39;));\n  }\n  deleteValue() {\n    this.value.remove().then(_ =&gt; console.log(&#39;deleted!&#39;));\n  }\n}</pre>\n\n<p>The total list of methods are here:</p>\n\n<p><strong>af.database.list</strong></p>\n\n<ul>\n\t<li><code>push(newItem: any): PromiseWithFirebase&lt;void&gt;</code></li>\n\t<li><code>update(value: any): Promise&lt;void&gt;</code></li>\n\t<li><code>remove(key?: string): Promise&lt;void&gt;</code> (if you all remove with a key, it will remove the item, if you all remove with null or no param it will delete this list)</li>\n</ul>\n\n<p><strong>af.database.object</strong></p>\n\n<ul>\n\t<li><code>set(value: any): Promise&lt;void&gt;</code></li>\n\t<li><code>update(value: any): Promise&lt;void&gt;</code></li>\n\t<li><code>remove(): Promise&lt;void&gt;</code></li>\n</ul>\n\n<p>I&#39;m closing the issue but let me know if you have any questions! I&#39;ll be adding TONS more documentation soon. Trying to get a release out first \uD83D\uDE04</p>\n\n<p>And pleassseee leave feedback!</p>\n\n<p>Thanks for taking the time to leave an issue, it&#39;s always appreciated! ✌️</p>\n",
        "maj" : 1490648467760,
        "rows" : "1",
        "title" : "How to perform database manipulations (set/update/delete,etc.) with Angularfire2?"
      },
      "-KgEmovnjwAufN_aBQxG" : {
        "authorName" : "Nicolas Renard",
        "authorPict" : "https://lh3.googleusercontent.com/-nBsbofbzuQY/AAAAAAAAAAI/AAAAAAAAAmc/xJn6Fm81x04/photo.jpg",
        "authorUID" : "y1HYlzXKTQgBH3V9P2n7bUPbywB3",
        "color" : "#995533",
        "cols" : "2",
        "content" : "<div class=\"post-text\" itemprop=\"text\">\n<p>After reading a lot, and being close of opening a new topic I decided to answer here just to try to help to others. As I've seen there are several changes with the latest version of Angular 2. (Currently Beta9)</p>\n\n<p>I'll try to share my code in order to avoid the same frustration I had...</p>\n\n<p><strong>First, in our index.html</strong> </p>\n\n<p>As usual, we should have something like this:</p>\n\n<pre><code>&lt;html&gt;\n ****\n  &lt;body&gt;\n    &lt;my-app&gt;Loading...&lt;/my-app&gt;\n  &lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\n\n<p><strong>AppComponent (using innerHTML)</strong></p>\n\n<p>With this property you will be able to render the basic HTML, but you won't be able to do something similar to Angular 1.x as $compile through a scope:</p>\n\n<pre><code>import {Component} from 'angular2/core';\n\n@Component({\n    selector: 'my-app',\n    template: `\n                &lt;h1&gt;Hello my Interpolated: {{title}}!&lt;/h1&gt;\n                &lt;h1 [textContent]=\"'Hello my Property bound: '+title+'!'\"&gt;&lt;/h1&gt;\n                &lt;div [innerHTML]=\"htmlExample\"&gt;&lt;/div&gt;\n             `,\n})\n\nexport class AppComponent {\n    public title = 'Angular 2 app';\n    public htmlExample = '  &lt;div&gt;' +\n                                '&lt;span [textContent]=\"\\'Hello my Property bound: \\'+title\"&gt;&lt;/span&gt;' +\n                                '&lt;span&gt;Hello my Interpolated: {{title}}&lt;/span&gt;' +\n                            '&lt;/div&gt;'\n}\n</code></pre>\n\n<p>This will render the following:</p>\n\n<blockquote>\n  <p>Hello my Interpolated: Angular 2 app!</p>\n  \n  <p>Hello my Property bound: Angular 2 app!</p>\n  \n  <p>Hello my Interpolated: {{title}}</p>\n</blockquote>\n\n<p><strong>AppComponent Using <a href=\"https://angular.io/docs/js/latest/api/core/DynamicComponentLoader-class.html\" rel=\"nofollow\">DynamicComponentLoader</a></strong></p>\n\n<p>There is a little bug with the docs, documented in <a href=\"http://stackoverflow.com/questions/35508458/dynamiccomponentloader-in-angular2-beta-no-component-directive-at-element\">here</a>. So if we have in mind that, my code should look now like this: </p>\n\n<pre><code>import {DynamicComponentLoader, Injector, Component, ElementRef, OnInit} from \"angular2/core\";\n\n@Component({\n    selector: 'child-component',\n    template: `\n        &lt;div&gt;\n            &lt;h2 [textContent]=\"'Hello my Property bound: '+title\"&gt;&lt;/h2&gt;\n            &lt;h2&gt;Hello my Interpolated: {{title}}&lt;/h2&gt;\n        &lt;/div&gt;\n    `\n})\nclass ChildComponent {\n     title = 'ChildComponent title';\n}\n\n@Component({\n    selector: 'my-app',\n    template: `\n                &lt;h1&gt;Hello my Interpolated: {{title}}!&lt;/h1&gt;\n                &lt;h1 [textContent]=\"'Hello my Property bound: '+title+'!'\"&gt;&lt;/h1&gt;\n                &lt;div #child&gt;&lt;/div&gt;\n                &lt;h1&gt;End of parent: {{endTitle}}&lt;/h1&gt;\n             `,\n})\n\nexport class AppComponent implements OnInit{\n    public title = 'Angular 2 app';\n    public endTitle= 'Bye bye!';\n\n    constructor(private dynamicComponentLoader:DynamicComponentLoader, private elementRef: ElementRef) {\n//        dynamicComponentLoader.loadIntoLocation(ChildComponent, elementRef, 'child');\n    }\n\n    ngOnInit():any {\n        this.dynamicComponentLoader.loadIntoLocation(ChildComponent, this.elementRef, 'child');\n    }\n}\n</code></pre>\n\n<p>This will render the following:</p>\n\n<blockquote>\n  <p>Hello my Interpolated: Angular 2 app!</p>\n  \n  <p>Hello my Property bound: Angular 2 app!</p>\n  \n  <p>Hello my Property bound: ChildComponent title</p>\n  \n  <p>Hello my Interpolated: ChildComponent title</p>\n  \n  <p>End of parent: Bye bye!</p>\n</blockquote>\n    </div>\n\nvoir aussi <a href=\"https://angular.io/docs/ts/latest/guide/security.html#!#xss\">https://angular.io/docs/ts/latest/guide/security.html#!#xss</a>",
        "date" : 1490618618573,
        "maj" : 1490640011559,
        "rows" : "1",
        "title" : "loading component dynamicly"
      },
      "-KgFJablNq2rUHr91Ple" : {
        "authorName" : "Nicolas Renard",
        "authorPict" : "https://lh3.googleusercontent.com/-nBsbofbzuQY/AAAAAAAAAAI/AAAAAAAAAmc/xJn6Fm81x04/photo.jpg",
        "authorUID" : "y1HYlzXKTQgBH3V9P2n7bUPbywB3",
        "color" : "#AA8866",
        "cols" : "2",
        "content" : "<p><!-- Your share button code --><img alt=\"10 Angular 2 Modules and Tools you need to learn in 2017\" src=\"https://discoversdkcdn.azureedge.net/postscontent/Angular2-Modules-and-Tools-for-2017.png\" /></p>\n\n<p>Angular 2 is a very popular JavaScript framework for building rich web sites and mobile applications. As a result of the big community, the source code that is open, and the framework design, developers all over the world build 3rd parties modules and tools to support the development. They add features, make other developers lives easy, and save the world from nuclear war! ☺</p>\n\n<p>&nbsp;</p>\n\n<p>Prerequisites for Angular 2 development:</p>\n\n<ul>\n\t<li>Learn JavaScript (ES5, ES6)</li>\n\t<li>Learn TypeScript</li>\n\t<li>Learn Angular 2 basics (modules, components, templates, views, routes, http, &hellip;)</li>\n\t<li>Learn 3rd party tools, modules and libraries</li>\n</ul>\n\n<p>&nbsp;</p>\n\n<p>In this post I&rsquo;ll go over 10 angular 2 modules every developer needs to learn and use (the order is random).</p>\n\n<p>&nbsp;<a href=\"http://www.discoversdk.com/products/ionic\"><img alt=\"ionic\" src=\"https://discoversdkcdn.azureedge.net/postscontent/Angular2%20Modules%20and%20Tools%20for%202017/1.png\" style=\"height:60px; width:192px\" /></a>&nbsp;&nbsp;</p>\n\n<p><a href=\"http://www.discoversdk.com/products/ionic\"><strong>IONIC</strong></a></p>\n\n<p><a href=\"https://ionicframework.com\" target=\"_blank\">https://ionicframework.com</a></p>\n\n<p>IONIC is an open source framework for creating amazing mobile apps that also works seamlessly on the desktop. You can write your code once and deploy it to IOS , android, windows and more. It has many native plugins for many device features like Bluetooth, fingerprint sensors and more. It performs well and is extremely easy to use.</p>\n\n<p>&nbsp;</p>\n\n<p>Features:</p>\n\n<ul>\n\t<li>Open source</li>\n\t<li>Full cross-platform support - Android, iOS, Windows, Linux, OSX</li>\n\t<li>CLI tools and IONIC creator</li>\n\t<li>Many UI components</li>\n\t<li>Fully documented</li>\n\t<li>Extensible</li>\n\t<li>License: MIT</li>\n</ul>\n\n<p>&nbsp;</p>\n\n<p>See the site for beautiful examples and documentation.</p>\n\n<p>&nbsp;</p>\n\n<p><strong><img alt=\"ANGULAR MATERIAL\" src=\"https://discoversdkcdn.azureedge.net/postscontent/Angular2%20Modules%20and%20Tools%20for%202017/3.png\" style=\"height:123px; width:226px\" /></strong></p>\n\n<p><strong>Material design for Angular 2</strong></p>\n\n<p>&nbsp;</p>\n\n<p>Site: <a href=\"https://material.angular.io\" target=\"_blank\">https://material.angular.io</a></p>\n\n<p>Github : <a href=\"https://github.com/angular/material2\" target=\"_blank\">https://github.com/angular/material2</a></p>\n\n<p>Material design is an Angular 2 module that provides a rich set of UI components to integrate into your applications. All the components are modern UI components that work across the web, mobile and desktop.</p>\n\n<p>&nbsp;</p>\n\n<p>Features:</p>\n\n<ul>\n\t<li>Cross-platform support</li>\n\t<li>Fast and consistent interface</li>\n\t<li>Themable</li>\n\t<li>Highly optimized</li>\n\t<li>Input controls</li>\n\t<li>Layouts support</li>\n\t<li>Navigation controls</li>\n\t<li>Popups and dialogs</li>\n\t<li>License: MIT</li>\n</ul>\n\n<p>&nbsp;</p>\n\n<p>To use material design components you need to install it using npm and add a reference to your app.module.ts file:</p>\n\n<p>&nbsp;</p>\n\n<p>&nbsp;</p>\n\n<pre>\n<code>import { MaterialModule } from &#39;@angular/material&#39;;\n// other imports\n@NgModule({\n  imports: [MaterialModule.forRoot()],\n  ...\n})\nexport class PizzaPartyAppModule { }\n\n </code></pre>\n\n<p>&nbsp;</p>\n\n<p>For more examples and great documentation see the site/github repository.</p>\n\n<p>&nbsp;<img alt=\"angular in memory web API\" src=\"https://discoversdkcdn.azureedge.net/postscontent/Angular2%20Modules%20and%20Tools%20for%202017/ANGULAR_WEB_API.png\" style=\"height:63px; width:206px\" /></p>\n\n<p><strong>Angular in memory web API</strong></p>\n\n<p>&nbsp;</p>\n\n<p><a href=\"https://www.npmjs.com/package/angular-in-memory-web-api\" target=\"_blank\">https://www.npmjs.com/package/angular-in-memory-web-api</a></p>\n\n<p>While developing an angular 2 application, the developer is depended on a server app/service for data management. If you don&rsquo;t want to rely on the server side developer and still be able to test your code, this module will be very helpful for you. You can create http requests and get an observable object the same way you get from a real server</p>\n\n<p>&nbsp;</p>\n\n<p>Features</p>\n\n<ul>\n\t<li>Simulate a live web environment for testing your app</li>\n\t<li>Handle http request in memory</li>\n\t<li>Allows pass-through of certain requests</li>\n\t<li>Includes timing delays if desired, to simulate real response and traffic</li>\n\t<li>License: MIT</li>\n</ul>\n\n<p>&nbsp;</p>\n\n<p>To use the module app a reference in your app.module.ts file:</p>\n\n<p>&nbsp;</p>\n\n<p>&nbsp;</p>\n\n<pre>\n<code>import { HttpModule }           from &#39;@angular/http&#39;;\nimport { InMemoryWebApiModule } from &#39;angular-in-memory-web-api&#39;;\nimport { InMemHeroService }     from &#39;../app/hero-data&#39;;\n@NgModule({\n imports: [\n   HttpModule,\n   InMemoryWebApiModule.forRoot(InMemHeroService),\n   ...\n ],\n ...\n})\nexport class AppModule { ... }</code></pre>\n\n<p>&nbsp;</p>\n\n<p>&nbsp;See the site for more information and code examples</p>\n\n<p><img alt=\"ANGULAR METEOR\" src=\"https://discoversdkcdn.azureedge.net/postscontent/Angular2%20Modules%20and%20Tools%20for%202017/2.png\" style=\"height:125px; width:143px\" /></p>\n\n<p><strong>Angular Meteor</strong></p>\n\n<p><a href=\"https://angular-meteor.com\" target=\"_blank\">https://angular-meteor.com</a></p>\n\n<p>Angular meteor is a framework for building realtime and full stack applications with Angular and meteor. It provides real time data sync/store and let you write Angular code also on the server. It is also integrated with IONIC framework mentioned above</p>\n\n<p>&nbsp;</p>\n\n<p>Features</p>\n\n<ul>\n\t<li>Use existing frameworks (such as Blaze) with Angular2.</li>\n\t<li>Easy integration</li>\n\t<li>Easy deployment</li>\n\t<li>Cordova integration</li>\n\t<li>Full documentations and examples</li>\n\t<li>License: MIT</li>\n</ul>\n\n<p>&nbsp;</p>\n\n<p><a href=\"https://angular-meteor.com/tutorials/whatsapp2-tutorial\">h</a><a href=\"https://angular-meteor.com/tutorials/whatsapp2-tutorial\" target=\"_blank\">ttps://angular-meteor.com/tutorials/whatsapp2-tutorial</a> is a nice tutorial that shows you the power of the combination to build a whatsapp application.</p>\n\n<p>&nbsp;</p>\n\n<p><img alt=\"Angular doc\" src=\"https://discoversdkcdn.azureedge.net/postscontent/Angular2%20Modules%20and%20Tools%20for%202017/DAlogo.png\" style=\"height:103px; width:109px\" /></p>\n\n<p><strong>Angular Doc</strong></p>\n\n<p>&nbsp;</p>\n\n<p><a href=\"http://angulardoc.io/main\" target=\"_blank\">http://angulardoc.io/main</a></p>\n\n<p>Documenting your code can be very painful &ndash; as developers we want to write code, not documentation. A good software development process must include a documentation step, and with this tool, you can make the process a lot easier. Just point angulardoc at your github repo and go!</p>\n\n<p>&nbsp;</p>\n\n<p>Features:</p>\n\n<ul>\n\t<li>Repository management with a dashboard</li>\n\t<li>Architecture diagrams</li>\n\t<li>Class browser</li>\n\t<li>Modules diagram</li>\n\t<li>Route tree diagram</li>\n\t<li>Import diagram</li>\n</ul>\n\n<p>&nbsp;&nbsp;</p>\n\n<p>See the site for examples and more information</p>\n\n<p>&nbsp;</p>\n\n<p>&nbsp;<img alt=\"ng2 charts\" src=\"https://discoversdkcdn.azureedge.net/postscontent/Angular2%20Modules%20and%20Tools%20for%202017/NJ2.jpg\" style=\"height:108px; width:100px\" /></p>\n\n<p><strong>Ng2 Charts</strong></p>\n\n<p>&nbsp;</p>\n\n<p><a href=\"http://valor-software.com/ng2-charts/\" target=\"_blank\">http://valor-software.com/ng2-charts/</a></p>\n\n<p>If you want to include graphs in your applications you can use Chart.js</p>\n\n<p>Ng2 charts brings the popular Chart.js functionality to Angular2, and helps you generate many types of graphs to visualize your data.</p>\n\n<p>&nbsp;</p>\n\n<p>Features:</p>\n\n<ul>\n\t<li>Generates many types of charts</li>\n\t<li>Allows interaction with the charts via event callbacks</li>\n\t<li>Familiar interface for Chart.js users</li>\n\t<li>Easy integration</li>\n\t<li>Full documentation</li>\n\t<li>License: MIT</li>\n</ul>\n\n<p>&nbsp;</p>\n\n<p>For example, to create a simple chart:</p>\n\n<p>&nbsp;HTML:</p>\n\n<pre>\n<code>&lt;div style=&quot;display: block&quot;&gt;\n  &lt;canvas baseChart\n              [data]=&quot;doughnutChartData&quot;\n              [labels]=&quot;doughnutChartLabels&quot;\n              [chartType]=&quot;doughnutChartType&quot;\n              (chartHover)=&quot;chartHovered($event)&quot;\n              (chartClick)=&quot;chartClicked($event)&quot;&gt;&lt;/canvas&gt;\n&lt;/div&gt;\n\n</code></pre>\n\n<p>&nbsp;</p>\n\n<p>TypeScript</p>\n\n<p>&nbsp;</p>\n\n<p>&nbsp;</p>\n\n<pre>\n<code>import { Component } from &#39;@angular/core&#39;;\n @Component({\n  selector: &#39;doughnut-chart-demo&#39;,\n  templateUrl: &#39;./doughnut-chart-demo.html&#39;\n})\nexport class DoughnutChartDemoComponent {\n  // Doughnut\n  public doughnutChartLabels:string[] = [&#39;Download Sales&#39;, &#39;In-Store Sales&#39;, &#39;Mail-Order Sales&#39;];\n  public doughnutChartData:number[] = [350, 450, 100];\n  public doughnutChartType:string = &#39;doughnut&#39;;\n   // events\n  public chartClicked(e:any):void {\n    console.log(e);\n  }\n   public chartHovered(e:any):void {\n    console.log(e);\n  }\n}</code></pre>\n\n<p>&nbsp;</p>\n\n<p>&nbsp;For more information and examples see the site</p>\n\n<p>&nbsp;</p>\n\n<p>&nbsp;</p>\n\n<p>&nbsp;<img alt=\"ng2 ckeditor\" src=\"https://discoversdkcdn.azureedge.net/postscontent/Angular2%20Modules%20and%20Tools%20for%202017/NG.png\" style=\"height:71px; width:198px\" /></p>\n\n<p><strong>Ng2 CKEditor</strong></p>\n\n<p>&nbsp;</p>\n\n<p><a href=\"https://www.npmjs.com/package/ng2-ckeditor\" target=\"_blank\">https://www.npmjs.com/package/ng2-ckeditor</a></p>\n\n<p>If you build a site that users need to write text using a smart editor (writing comments, blog etc.) you can integrate CKEditor and you&rsquo;ll get it easy. Ng2-ckeditor is an Angular 2 CKEditor component.</p>\n\n<p>&nbsp;</p>\n\n<p>Features:</p>\n\n<ul>\n\t<li>Open source</li>\n\t<li>WYSIWYG editor</li>\n\t<li>Supports all the standard formatting</li>\n\t<li>Plugins support</li>\n\t<li>Easy to use and integrate</li>\n\t<li>License: MIT</li>\n</ul>\n\n<p>&nbsp;Example:</p>\n\n<p>&nbsp;</p>\n\n<p>&nbsp;</p>\n\n<pre>\n<code>import { CKEditorModule } from &#39;ng2-ckeditor&#39;;\n @NgModule({\n  // ... \n  imports:      [\n    CKEditorModule\n  ],\n  // ... \n})\nexport class AppModule { }\nimport { Component } from &#39;@angular/core&#39;;\n@Component({\n  selector: &#39;sample&#39;,\n  template: `\n  &lt;ckeditor\n    [(ngModel)]=&quot;ckeditorContent&quot;\n    [config]=&quot;{uiColor: &#39;#99000&#39;}&quot;\n    (change)=&quot;onChange($event)&quot;\n    (ready)=&quot;onReady($event)&quot;\n    (focus)=&quot;onFocus($event)&quot;\n    (blur)=&quot;onBlur($event)&quot;\n    debounce=&quot;500&quot;&gt;\n  &lt;/ckeditor&gt;\n  `\n})\nexport class Sample{\n  constructor(){\n    this.ckeditorContent = `&lt;p&gt;My HTML&lt;/p&gt;`;\n  }\n}</code></pre>\n\n<p>&nbsp;</p>\n\n<p>&nbsp;For more information and live demo see the site</p>\n\n<p>&nbsp;</p>\n\n<p>&nbsp;</p>\n\n<p>&nbsp;<img alt=\"angular fire 2\" src=\"https://discoversdkcdn.azureedge.net/postscontent/Angular2%20Modules%20and%20Tools%20for%202017/angular_fire.png\" style=\"height:86px; width:200px\" /></p>\n\n<p>&nbsp;<strong>AngularFire 2</strong></p>\n\n<p>&nbsp;</p>\n\n<p><a href=\"https://github.com/angular/angularfire2\" target=\"_blank\">https://github.com/angular/angularfire2</a></p>\n\n<p>Firebase is a great toolset and infrastructure for building applications. AngularFire 2 is the official library for firebase and Angular 2. It helps with realtime binding, rxjs, authentication and more.</p>\n\n<p>&nbsp;</p>\n\n<p>Features:</p>\n\n<ul>\n\t<li>Open source</li>\n\t<li>Observable based - use rxjs, Firebase, or Angular2</li>\n\t<li>Synchronized database collections</li>\n\t<li>Authentication</li>\n\t<li>Retrieve data as objects</li>\n\t<li>License: MIT</li>\n</ul>\n\n<p>&nbsp;</p>\n\n<p>Example:</p>\n\n<p>&nbsp;</p>\n\n<pre>\n<code>import {Component} from &#39;@angular/core&#39;;\nimport {AngularFire, FirebaseListObservable} from &#39;angularfire2&#39;;\n\n@Component({\n  selector: &#39;project-name-app&#39;,\n  template: `\n  &lt;ul&gt;\n    &lt;li *ngFor=&quot;let item of items | async&quot;&gt;\n      {{ item.name }}\n    &lt;/li&gt;\n  &lt;/ul&gt;\n  `\n})\nexport class MyApp {\n  items: FirebaseListObservable&lt;any[]&gt;;\n  constructor(af: AngularFire) {\n    this.items = af.database.list(&#39;/items&#39;);\n  }\n}</code></pre>\n\n<p>&nbsp;</p>\n\n<p><img alt=\"ng2 smart table\" src=\"https://discoversdkcdn.azureedge.net/postscontent/Angular2%20Modules%20and%20Tools%20for%202017/Screen%20Shot%202017-02-07%20at%2011.17.56.png\" style=\"height:55px; width:241px\" /></p>\n\n<p><strong>Ng2 Smart Table</strong></p>\n\n<p>&nbsp;</p>\n\n<p><a href=\"https://akveo.github.io/ng2-smart-table/\" target=\"_blank\">https://akveo.github.io/ng2-smart-table/</a></p>\n\n<p>This simple component help managing data in tables. Use it for free to display and edit data in place, filter by criteria, sort, and much more. It integrates easily with your Angular 2 components and fully documented:</p>\n\n<p>&nbsp;</p>\n\n<p>Features:</p>\n\n<ul>\n\t<li>Local data source (Server/API DataSource is on its way)</li>\n\t<li>Filtering</li>\n\t<li>Sorting</li>\n\t<li>Pagination</li>\n\t<li>Inline Add/Edit/Delete</li>\n\t<li>Flexible event model</li>\n\t<li>License: MIT</li>\n</ul>\n\n<p>&nbsp;</p>\n\n<p>Example:</p>\n\n<p>&nbsp;</p>\n\n<p>&nbsp;</p>\n\n<pre>\n<code>@NgModule({\n  imports: [\n    // ...\n       Ng2SmartTableModule,\n      // ...\n  ],\n  declarations: [ ... ]\n})\n\n </code></pre>\n\n<p>&nbsp;</p>\n\n<p>and inside the component:</p>\n\n<p>&nbsp;</p>\n\n<pre>\n<code>@Component({\n  template: `\n    &lt;ng2-smart-table [settings]=&quot;settings&quot;&gt;&lt;/ng2-smart-table&gt;\n  `\n})\n\n</code></pre>\n\n<p>&nbsp;</p>\n\n<p>Live demo is on the github page or on:</p>\n\n<p><a href=\"https://akveo.github.io/ng2-smart-table/demo\" target=\"_blank\">https://akveo.github.io/ng2-smart-table/demo</a></p>\n\n<p>&nbsp;</p>\n\n<p><img alt=\"primeNG\" src=\"https://discoversdkcdn.azureedge.net/postscontent/Angular2%20Modules%20and%20Tools%20for%202017/PRIME_NG.png\" style=\"height:141px; width:156px\" /></p>\n\n<p><strong>PrimeNG</strong></p>\n\n<p>&nbsp;</p>\n\n<p><a href=\"http://www.primefaces.org/primeng/\" target=\"_blank\">http://www.primefaces.org/primeng/</a></p>\n\n<p>PrimeNG is a collection of rich UI components for Angular 2. PrimeNG is a sibling of the popular JavaServer Faces Component Suite. It&rsquo;s open source, free to use and will upgrade your applications&rsquo; look and feel.</p>\n\n<p>&nbsp;</p>\n\n<p>Features:</p>\n\n<ul>\n\t<li>Very large set of widgets</li>\n\t<li>Simple and powerful</li>\n\t<li>Themable</li>\n\t<li>Active community</li>\n\t<li>Touch screen optimizations</li>\n\t<li>Well-integrated</li>\n\t<li>License: MIT</li>\n</ul>\n\n<p>&nbsp;</p>\n\n<p>Its also well documented with many samples online.</p>\n\n<p><!-- Your share button code --><a href=\"https://twitter.com/share\">Tweet</a></p>\n\n<p>&nbsp;</p>\n",
        "date" : 1490627472739,
        "maj" : 1490649171123,
        "rows" : "1",
        "title" : "10 module et outils pour Angular 2 à connaitre en 2017"
      },
      "-KgG-q1kvUd55B7lG0ZC" : {
        "authorName" : "Nicolas Renard",
        "authorPict" : "https://lh3.googleusercontent.com/-nBsbofbzuQY/AAAAAAAAAAI/AAAAAAAAAmc/xJn6Fm81x04/photo.jpg",
        "authorUID" : "y1HYlzXKTQgBH3V9P2n7bUPbywB3",
        "color" : "#333399",
        "cols" : "1",
        "content" : "<p><img alt=\"\" src=\"https://gae-angular-material-starter.appspot.com/p/modules/core/img/material-design-logo.png\" style=\"height:170px; width:175px\" />&nbsp;Material angular:</p>\n\n<p>&nbsp;</p>\n\n<ul>\n\t<li>\n\t<p><a href=\"https://material.io/guidelines/style/icons.html#icons-system-icons\">https://material.io/guidelines/style/icons.html#icons-system-icons</a></p>\n\t</li>\n\t<li>\n\t<p><a href=\"https://material.io/icons/\">https://material.io/icons/</a></p>\n\t</li>\n\t<li>\n\t<p><a href=\"https://github.com/material-components\">https://github.com/material-components</a></p>\n\t</li>\n\t<li>\n\t<p><a href=\"https://material.angularjs.org/latest/api/directive/mdAutocomplete\">https://material.angularjs.org/latest/api/directive/mdAutocomplete</a></p>\n\t</li>\n\t<li>\n\t<p><a href=\"http://fezvrasta.github.io/bootstrap-material-design/#getting-started\">http://fezvrasta.github.io/bootstrap-material-design/#getting-started</a></p>\n\t</li>\n\t<li>\n\t<p>Directive:&nbsp;<a href=\"https://material.angularjs.org/latest/api/directive/mdAutocomplete\">https://material.angularjs.ocrg/latest/api/directive/mdAutocomplete</a></p>\n\t</li>\n</ul>\n\n<p><a href=\"https://sherweb.github.io/ng2-materialize/home\"><img alt=\"\" src=\"https://sherweb.github.io/ng2-materialize/assets/materialize-logo.png\" /></a></p>\n\n<p><a href=\"https://sherweb.github.io/ng2-materialize/select\">https://sherweb.github.io/ng2-materialize/select</a></p>\n\n<p>&nbsp;</p>\n\n<p><img alt=\"\" src=\"http://www.material-ui.com/images/material-ui-logo.svg\" /></p>\n\n<p><a href=\"http://www.material-ui.com/#/\">http://www.material-ui.com/#/</a></p>\n",
        "maj" : 1490716964324,
        "rows" : "1",
        "title" : "Material Design"
      }
    },
    "postsDesc" : {
      "-Kg582gl4ixTJpil2xhO" : {
        "authorUID" : "y1HYlzXKTQgBH3V9P2n7bUPbywB3",
        "color" : "#555588",
        "cols" : "3",
        "rows" : "1",
        "title" : "Changement de titre pour le second post"
      },
      "-Kg5ENydo8mmRis6otJ0" : {
        "authorUID" : "y1HYlzXKTQgBH3V9P2n7bUPbywB3",
        "color" : "#FFFF55",
        "cols" : "1",
        "rows" : "2",
        "title" : "API à retenir"
      },
      "-Kg5KPAy_5FfEb7Z3B2C" : {
        "authorUID" : "y1HYlzXKTQgBH3V9P2n7bUPbywB3",
        "color" : "#996666",
        "cols" : "3",
        "rows" : "1",
        "title" : "How to perform database manipulations (set/update/delete,etc.) with Angularfire2?"
      },
      "-KgEmovnjwAufN_aBQxG" : {
        "authorUID" : "y1HYlzXKTQgBH3V9P2n7bUPbywB3",
        "color" : "#995533",
        "cols" : "2",
        "rows" : "1",
        "title" : "loading component dynamicly"
      },
      "-KgFJablNq2rUHr91Ple" : {
        "authorUID" : "y1HYlzXKTQgBH3V9P2n7bUPbywB3",
        "color" : "#AA8866",
        "cols" : "2",
        "rows" : "1",
        "title" : "10 module et outils pour Angular 2 à connaitre en 2017"
      },
      "-KgG-q1kvUd55B7lG0ZC" : {
        "authorUID" : "y1HYlzXKTQgBH3V9P2n7bUPbywB3",
        "color" : "#333399",
        "cols" : "1",
        "rows" : "1",
        "title" : "Material Design"
      }
    }
  }
}
